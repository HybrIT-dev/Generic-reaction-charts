fullnameOverride: <deployment-name>

replicaCount: 1
containerPort: 4100

image:
  repository: <url-to-image-host>/<image-name>
  tag: <image-tag> // our pipeline adds this based on a version generated from git commits
  pullPolicy: Always

imagePullSecrets:
  - name: docker-cfg

env:
  - name: API_URL
    value: ""https://<storefront-url>/api/graphql""
  - name: HYDRA_ADMIN_URL
    value: "http://<hydra-admin-service>.<namespace>:4445"
  - name: HYDRA_TOKEN_URL
    value: "https://<hydra-public-ingress>/oauth2/token"
  - name: LOG_LEVEL
    value: "debug"
  - name: METEOR_DISABLE_OPTIMISTIC_CACHING
    value: 1
  - name: METEOR_WATCH_POLLING_INTERVAL_MS
    value: 10000
  - name: MONGO_OPLOG_URL
    value: "<mongo-connection-string-to-local-db>"
  - name: MONGO_URL
    value: "<mongo-connection-string-to-store-db>"
  - name: OAUTH2_CLIENT_DOMAINS
    value: "https://<storefront-url>"
  - name: PORT
    value: 4100
  - name: ROOT_URL
    value: "https://<storefront-url>/idp"

service:
  type: ClusterIP
  port: 4100

probes:
  enabled: false
  probePath: /
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  readinessProbe:
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: 50mb
    nginx.ingress.kubernetes.io/client-max-body-size: 50m
    nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /idp/$2
  hosts:
    - host: "<storefront-url>"
      path: "/account(.*)"
    - host: "<storefront-url>"
      path: "/consent(.*)"
    - host: "<storefront-url>"
      path: "/idp(/|$)(.*)"
  tls:
    - hosts:
        - "<storefront-url>"
      secretName: "<storefront-url-key>"
